swagger: '2.0'
info:
  version: 2.0.0
  title: ongbook-api
basePath: /api
paths:
    patch:
      tags:
        - Demand
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: Demand.patchOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Demand'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Demand'
      deprecated: false
    put:
      tags:
        - Demand
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: Demand.replaceOrCreate__put_demands
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Demand'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Demand'
      deprecated: false
    get:
      tags:
        - Demand
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Demand.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Demand'
      deprecated: false
  /ngos:
    post:
      tags:
        - NGO
      summary: Create a new instance of the model and persist it into the data source.
      operationId: NGO.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/NGO'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/NGO'
      deprecated: false
    patch:
      tags:
        - NGO
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: NGO.patchOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/NGO'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/NGO'
      deprecated: false
    put:
      tags:
        - NGO
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: NGO.replaceOrCreate__put_ngos
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/NGO'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/NGO'
      deprecated: false
    get:
      tags:
        - NGO
      summary: Find all instances of the model matched by filter from the data source.
      operationId: NGO.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/NGO'
      deprecated: false
tags:
  - name: NGO
consumes:
  - application/json
produces:
  - application/json
definitions:
  x-any:
    properties: {}
  NGO:
    properties:
      name:
        type: string
      additionalType:
        type: string
      alternateName:
        type: string
      description:
        type: string
      disambiguatingDescription:
        type: string
      image:
        type: string
      mainEntityOfPage:
        type: string
      potentialAction:
        type: object
      url:
        type: string
      address:
        type: object
      aggregateRating:
        type: object
      alumni:
        type: object
      areaServed:
        type: object
      award:
        type: string
      brand:
        type: object
      contactPoint:
        type: object
      department:
        type: object
      dissolutionDate:
        type: object
      duns:
        type: string
      email:
        type: string
      employee:
        type: object
      events:
        type: array
        items:
          type: object
      faxNumber:
        type: string
      founder:
        type: object
      foundingDate:
        type: string
        format: date-time
      foundingLocation:
        type: object
      funder:
        type: object
      globalLocationNumber:
        type: string
      hasOfferCatalog:
        type: object
      hasPOS:
        type: object
      isicV4:
        type: string
      legalName:
        type: string
      leiCode:
        type: string
      location:
        type: object
      logo:
        type: string
      makesOffer:
        type: array
        items:
          type: object
      member:
        type: array
        items:
          type: object
      memberOf:
        type: object
      naics:
        type: string
      numberOfEmployees:
        type: number
        format: double
      owns:
        type: object
      parentOrganization:
        type: object
      review:
        type: object
      seeks:
        type: object
      sponsor:
        type: object
      subOrganization:
        type: object
      taxID:
        type: string
      telephone:
        type: string
      vatID:
        type: string
      complete:
        default: false
        type: boolean
      id:
        $ref: '#/definitions/ObjectID'
      ngo_id:
        $ref: '#/definitions/ObjectID'
    example:
      name: "ONG de Idosos"
    additionalProperties: false
  ObjectID:
    type: string
    pattern: '^[a-fA-F\d]{24}$'
